name: Build Release Binaries

on:
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    name: Build Binary (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64-linux
            spc_suffix: linux-x86_64.tar.gz
            compressed_file: php-8.3.9-micro-linux-x86_64.tar.gz
            micro_suffix: common/php-8.3.9-micro-linux-x86_64.tar.gz
          - os: macos-latest
            arch: x64-darwin
            spc_suffix: macos-x86_64.tar.gz
            compressed_file: php-8.3.9-micro-macos-x86_64.tar.gz
            micro_suffix: common/php-8.3.9-micro-macos-x86_64.tar.gz
          - os: macos-14
            arch: arm64-darwin
            spc_suffix: macos-aarch64.tar.gz
            compressed_file: php-8.3.9-micro-macos-aarch64.tar.gz
            micro_suffix: common/php-8.3.9-micro-macos-aarch64.tar.gz
          - os: windows-latest
            arch: x64-win32
            spc_suffix: windows-x86_64.zip
            compressed_file: php-8.3.9-micro-win.zip
            micro_suffix: windows/spc-max/php-8.3.9-micro-win.zip
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"
          extensions: bcmath,calendar,ctype,curl,dba,dom,exif,fileinfo,filter,iconv,mbstring,openssl,pcntl,pdo_mysql,pdo_sqlite,pdo,phar,posix,readline,session,simplexml,sockets,sodium,sqlite3,tokenizer,xml,xmlreader,xmlwriter,zip,zlib

      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-dev --quiet

      - name: Install SPC
        run: |
          curl -O -L "https://github.com/crazywhalecc/static-php-cli/releases/latest/download/spc-${{ matrix.spc_suffix }}"
          tar xzf "spc-${{ matrix.spc_suffix }}"
          chmod +x ./spc
          ./spc --version

      - name: Build Binary
        run: |
          echo "" > .env
          php php-parser app:build --build-version=${{ env.VERSION }}

      - name: Download PHP
        run: |
          curl -O -L "https://dl.static-php.dev/static-php-cli/${{ matrix.micro_suffix }}"
          tar xzf "${{ matrix.compressed_file }}"
          mkdir -p buildroot/bin
          mv micro.sfx buildroot/bin

      - name: Extract Archive (Zip)
        run: |
          unzip "${{ matrix.compressed_file }}"
        if: endsWith(matrix.compressed_file, 'zip')

      - name: Extract Archive (Tar)
        run: |
          tar xzf "${{ matrix.compressed_file }}"
        if: ${{ !endsWith(matrix.compressed_file, 'zip') }}

      - name: Make Binary Directory (Windows)
        run: |
          if (-not (test-path buildroot/bin)) { mkdir -p buildroot/bin }
        if: contains(matrix.os, 'windows')

      - name: Make Binary Directory (Windows)
        run: |
          mkdir -p buildroot/bin
        if: ${{ !contains(matrix.os, 'windows') }}

      - name: Move Binary
        run: |
          mv micro.sfx buildroot/bin

      - name: SPC Combine
        run: |
          ./spc micro:combine builds/php-parser -O bin/php-parser-${{ env.VERSION }}-${{ matrix.arch }}

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-parser-${{ env.VERSION }}-${{ matrix.arch }}
          path: bin/php-parser-${{ env.VERSION }}-${{ matrix.arch }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            bin/php-parser-${{ env.VERSION }}-${{ matrix.arch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
